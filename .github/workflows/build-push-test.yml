name: build and push on main

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: panubo/haproxy

jobs:
  build_and_push:
    strategy:
      matrix:
        version: ["2.0"] #["1.8", "2.0", "2.2", "2.5"]

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get image version(s)
        id: image_version
        run: |
          cd ${{ matrix.version }}
          make _ci_version >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE_NAME }}
            quay.io/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            ${{ steps.image_version.outputs.image_version }}
            # type=schedule
            # type=ref,event=branch
            # type=ref,event=pr
            # type=semver,pattern={{version}}
            # type=semver,pattern={{major}}.{{minor}}
            # type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.PANUBUILD_DOCKERHUB_USERNAME }}
          password: ${{ secrets.PANUBUILD_DOCKERHUB_TOKEN }}

      - name: Login to Quay.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.PANUBUILD_QUAYIO_USERNAME }}
          password: ${{ secrets.PANUBUILD_QUAYIO_TOKEN }}

      - name: Setup BATS
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.7.0

      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: "{{defaultContext}}:${{ matrix.version }}"
          file: Dockerfile
          cache-from: type=gha
          load: true
          tags: ${{ env.IMAGE_NAME }}:test

      - name: Test
        run:
          cd ${{ matrix.version }}
          make _ci_test

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: "{{defaultContext}}:${{ matrix.version }}"
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64 # ,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
